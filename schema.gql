# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type UserType {
  id: ID!
  fullName: String!
  username: String!
  phone: String!
  email: String!
  access: AccessEnumType!
  storeId: ID
  createdAt: DateTime!
  updatedAt: DateTime!
}

enum AccessEnumType {
  SELLER
  OWNER
  MANAGER
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type AuthTokenType {
  access_token: String!
}

type StoreType {
  id: ID!
  address: String!
  designation: String!
  phone: String!
  globalSale: String
  saleType: StoreSaleEnumType
  createdAt: DateTime!
  updatedAt: DateTime!
  products: [ProductType!]!
  sellers: [UserType!]!
  sales: [SaleType!]!
}

enum StoreSaleEnumType {
  DEFAULT
  PRODUCT
  SERVICE
}

type OrderType {
  id: ID!
  saleId: ID!
  creditNoteId: ID!
  debitNoteId: ID!
  productId: ID!
  serviceId: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  products: [ProductType!]!
  services: [ServiceType!]!
}

type SaleType {
  id: ID!
  sellerId: ID!
  clientId: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  orders: [OrderType!]!
  seller: UserType
  client: ClientType
  invoice: InvoiceType
}

type ReportStoreType {
  sales: [SaleType!]
  totalSales: Float
  totalSalesBalance: Float
}

type CompanyType {
  tenantId: ID!
  id: ID!
  nif: String!
  name: String!
  address: String!
  fax: String!
  vatRegime: VatRegimeEnumType!
  logo: String!
  caeId: ID!
  stores: [StoreType!]!
  saftExportDate: DateTime
  createdAt: DateTime!
  updatedAt: DateTime!
  cae: CAEType!
}

enum VatRegimeEnumType {
  GENERAL_REGIME
  EXCLUSION_REGIME
  SIMPLIFIED_REGIME
}

type CAEType {
  id: ID!
  name: String!
  code: Int!
  sectorId: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  sector: SectorType!
}

type ProductType {
  id: ID!
  name: String!
  description: String
  image: String
  price: Float!
  code: Int
  withholding: Boolean!
  categoryId: ID!
  storeId: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  category: CategoryType!
  charges: [ChargeType!]!
  stock: [SupplierOnProductType!]!
}

type CategoryType {
  id: ID!
  name: String!
  description: String
  type: CategoryEnumType!
  createdAt: DateTime!
  updatedAt: DateTime!
  charges: [ChargeType!]!
}

enum CategoryEnumType {
  PRODUCT
  SERVICE
}

type ChargeType {
  id: ID!
  name: String!
  acronym: String!
  percentage: Float!
  type: ChargeEnumType!
  storeId: ID
  categoryId: ID
  serviceId: ID
  productId: ID
  createdAt: DateTime!
  updatedAt: DateTime!
}

enum ChargeEnumType {
  TAX
  FEE
  DISCOUNT
}

type SupplierOnProductType {
  id: ID!
  supplierId: ID!
  productId: ID!
  quantity: Float!
  createdAt: DateTime!
  updatedAt: DateTime!
  product: ProductType!
  supplier: SupplierType!
}

type ServiceType {
  id: ID!
  code: Float
  name: String!
  description: String
  price: Float!
  categoryId: ID!
  storeId: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  category: CategoryType!
  charges: [ChargeType!]!
}

type ClientType {
  id: ID!
  fullName: String!
  nif: String
  phone: String!
  email: String
  address: String!
  type: ClientEnumType
  caeId: ID
  storeId: ID
  createdAt: DateTime!
  updatedAt: DateTime!
}

enum ClientEnumType {
  INDIVIDUAL
  LEGAL
}

type InvoiceType {
  id: ID!
  number: Int!
  change: Float
  amount: Float!
  saleId: ID!
  observation: String
  retention: Float
  digitalSignature: String!
  status: InvoiceEnumType!
  dueDate: DateTime!
  createdAt: DateTime!
  updatedAt: DateTime!
  sale: SaleType
  receipt: [ReceiptType!]
  creditNote: [CreditNoteType!]
  debitNote: [DebitNoteType!]
}

enum InvoiceEnumType {
  DRAFT
  ISSUED
  PAID
  OVERDUE
  CANCELLED
}

type SectorType {
  id: ID!
  name: String!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type TenantCredentialsType {
  access_key: String!
}

type ReceiptType {
  id: ID!
  amount: Float!
  change: Float
  number: Int!
  observation: String
  dueDate: DateTime!
  digitalSignature: String!
  invoiceId: ID!
  status: ReceiptEnumType!
  createdAt: DateTime!
  updatedAt: DateTime!
  invoice: InvoiceType!
}

enum ReceiptEnumType {
  ISSUED
  PAID
}

type CreditNoteType {
  id: ID!
  change: Float!
  number: Int!
  amount: Float!
  digitalSignature: String!
  invoiceId: ID!
  status: CreditNoteEnumType!
  observation: String
  retention: Float
  dueDate: DateTime!
  createdAt: DateTime!
  updatedAt: DateTime!
  invoice: InvoiceType!
  orders: [OrderType!]
}

enum CreditNoteEnumType {
  DRAFT
  ISSUED
  APPLIED
  CANCELLED
}

type DebitNoteType {
  id: ID!
  number: Int!
  change: Float!
  amount: Float!
  digitalSignature: String!
  invoiceId: ID!
  status: DebitNoteEnumType!
  observation: String
  retention: Float
  dueDate: DateTime!
  createdAt: DateTime!
  updatedAt: DateTime!
  invoice: InvoiceType!
  orders: [OrderType!]
}

enum DebitNoteEnumType {
  DRAFT
  ISSUED
  APPLIED
  CANCELLED
}

type SupplierType {
  id: ID!
  fullName: String!
  nif: String
  phone: String!
  email: String
  address: String!
  type: SupplierEnumType
  storeId: ID
  caeId: ID
  createdAt: DateTime!
  updatedAt: DateTime!
}

enum SupplierEnumType {
  INDIVIDUAL
  LEGAL
}

type Query {
  user: UserType!
  getUser(id: ID!): UserType!
  getUsers(storeId: ID): [UserType!]!
  getCompany: CompanyType
  getStores: [StoreType!]!
  getStore(id: ID!): StoreType
  getStoreReport(id: ID!, options: ReportStoreOptionsInput): ReportStoreType
  getCategories: [CategoryType!]!
  getCategory(id: ID!): CategoryType
  getCategoriesByStore(storeId: ID!): [CategoryType!]
  getProducts(storeId: ID!, filter: FilterProductInput): [ProductType!]!
  getProduct(id: ID!): ProductType
  getServices(storeId: ID!, filter: FilterServiceInput): [ServiceType!]!
  getService(id: ID!): ServiceType
  getSales(storeId: ID!): [SaleType!]!
  getSale(id: ID!): SaleType
  getOrders(saleId: ID!): [OrderType!]!
  getOrder(id: ID!): OrderType
  getSectors: [SectorType!]!
  getSector(id: ID!): SectorType
  getCAEs: [CAEType!]!
  getCAE(id: ID!): CAEType
  getCharges: [ChargeType!]!
  getCharge(id: ID!): ChargeType
  getChargesByStore(storeId: ID!): [ChargeType!]
  getClients(filter: FilterClientInput): [ClientType!]!
  getClient(id: ID!): ClientType
  getClientsByStore(storeId: ID!): [ClientType!]
  getInvoices(filter: FilterInvoiceInput): [InvoiceType!]!
  getInvoice(id: ID!): InvoiceType
  getReceipts: [ReceiptType!]!
  getReceipt(id: ID!): ReceiptType
  getCreditNotes: [CreditNoteType!]!
  getCreditNote(id: ID!): CreditNoteType
  getDebitNotes: [DebitNoteType!]!
  getDebitNote(id: ID!): DebitNoteType
  getSuppliers(filter: FilterSupplierInput): [SupplierType!]!
  getSupplier(id: ID!): SupplierType
  getSuppliersByStore(storeId: ID!): [SupplierType!]
  getSupplierOnProducts(filter: FilterSupplierOnProductInput): [SupplierOnProductType!]!
  getSupplierOnProduct(id: ID!): SupplierOnProductType
}

input ReportStoreOptionsInput {
  period: PeriodReportStoreOptionsEnumType
  from: DateTime = "2024-10-03T07:28:28.920Z"
  sellerId: ID
}

enum PeriodReportStoreOptionsEnumType {
  DAY
  WEEK
  MONTH
  YEAR
}

input FilterProductInput {
  name: String
  categoryId: ID
  paginate: FilterProductPaginateInput
}

input FilterProductPaginateInput {
  page: Float = 1
  limit: Float = 30
}

input FilterServiceInput {
  name: String
  categoryId: ID
  paginate: FilterServicePaginateInput
}

input FilterServicePaginateInput {
  page: Float = 1
  limit: Float = 30
}

input FilterClientInput {
  storeId: String
  fullName: String
  email: String
  phone: String
  paginate: FilterClientPaginateInput
}

input FilterClientPaginateInput {
  page: Float = 1
  limit: Float = 30
}

input FilterInvoiceInput {
  number: Float
  paginate: FilterInvoicePaginateInput
  period: FilterInvoiceDateInput
}

input FilterInvoicePaginateInput {
  page: Float = 1
  limit: Float = 30
}

input FilterInvoiceDateInput {
  start: DateTime
  end: DateTime
}

input FilterSupplierInput {
  storeId: String
  fullName: String
  email: String
  phone: String
  paginate: FilterSupplierPaginateInput
}

input FilterSupplierPaginateInput {
  page: Float = 1
  limit: Float = 30
}

input FilterSupplierOnProductInput {
  productId: String
  supplierId: String
  paginate: FilterSupplierOnProductPaginateInput
}

input FilterSupplierOnProductPaginateInput {
  page: Float = 1
  limit: Float = 30
}

type Mutation {
  signUp(fullName: String!, username: String, email: String!, phone: String, access: AccessEnumType = SELLER, storeId: ID, password: String!): AuthTokenType!
  signIn(email: String!, password: String!): AuthTokenType!
  createStore(address: String!, designation: String!, phone: String!, globalSale: String, saleType: StoreSaleEnumType = DEFAULT): StoreType!
  createCategory(name: String!, description: String, type: CategoryEnumType!, charges: [ID!] = []): CategoryType!
  editCategory(id: String!, name: String, description: String, type: CategoryEnumType, charges: [ID!]): CategoryType!
  createProduct(image: Upload, name: String!, description: String, price: Float!, code: Int, withholding: Boolean!, categoryId: ID!, charges: [ID!] = [], suppliers: [ProductSupplierInput!] = [], storeId: ID!): ProductType!
  editProduct(id: ID!, name: String, description: String, image: Upload, price: Float, code: Int, withholding: Boolean!, expiresOn: DateTime, categoryId: ID, charges: [ID!] = [], suppliers: [ProductSupplierInput!] = [], storeId: ID): ProductType!
  createService(code: Float, name: String!, description: String, price: Float!, categoryId: ID!, charges: [ID!] = [], storeId: ID!): ServiceType!
  editService(id: ID!, code: Float, name: String, description: String, price: Float, categoryId: ID, charges: [ID!] = [], storeId: ID): ServiceType!
  createSale(orders: [CreateOrderSaleInput!]!, clientId: ID): SaleType!
  createOrder(saleId: ID!, debitNoteId: ID, creditNoteId: ID, productId: ID, serviceId: ID): OrderType!
  createSector(name: String!): SectorType!
  createCAE(name: String!, code: Int!, sectorId: ID!): CAEType!
  createTenant(logo: Upload, fullName: String!, username: String!, phone: String!, email: String, company: CreateCompanyInput!, partnerId: ID, expiresAt: DateTime): TenantCredentialsType!
  createCharge(name: String!, acronym: String!, percentage: Float!, type: ChargeEnumType!, storeId: ID!, categoryId: ID, serviceId: ID, productId: ID): ChargeType!
  createClient(fullName: String!, nif: String, phone: String!, email: String, address: String!, type: ClientEnumType = INDIVIDUAL, caeId: ID, storeId: ID): ClientType!
  createInvoice(amount: Float!, change: Float, saleId: ID!, observation: String, retention: Float, dueDate: DateTime!, status: InvoiceEnumType!): InvoiceType!
  editInvoice(amount: Float, change: Float, saleId: ID, observation: String, retention: Float, status: InvoiceEnumType!, dueDate: DateTime!): InvoiceType!
  createReceipt(digitalSignature: String, observation: String, dueDate: DateTime!, amount: Float!, change: Float, invoiceId: ID!, status: ReceiptEnumType! = ISSUED, payments: [ReceiptPaymentInput!]!): ReceiptType!
  editReceipt(id: ID, amount: Float!, change: Float, observation: String, dueDate: DateTime!, digitalSignature: String, invoiceId: ID, status: ReceiptEnumType): ReceiptType!
  createCreditNote(amount: Float!, change: Float, invoiceId: ID!, digitalSignature: String, status: CreditNoteEnumType! = ISSUED, observation: String, retention: Float, dueDate: DateTime!, payments: [CreditNotePaymentInput!]!, orders: [CreateOrderSaleInput!]!): CreditNoteType!
  editCreditNote(id: ID!, amount: Float, change: Float!, digitalSignature: String, invoiceId: ID, status: CreditNoteEnumType, observation: String, retention: Float, dueDate: DateTime): CreditNoteType!
  createDebitNote(change: Float!, amount: Float!, invoiceId: ID!, digitalSignature: String, status: DebitNoteEnumType! = ISSUED, observation: String, retention: Float, dueDate: DateTime!, payments: [DebitNotePaymentInput!]!, orders: [CreateOrderSaleInput!]!): DebitNoteType!
  editDebitNote(id: ID!, change: Float, digitalSignature: String, invoiceId: ID, status: DebitNoteEnumType, observation: String, retention: Float, dueDate: DateTime): DebitNoteType!
  createSupplier(fullName: String!, nif: String, phone: String!, email: String, address: String!, type: SupplierEnumType = INDIVIDUAL, storeId: ID, caeId: ID): SupplierType!
  createSupplierOnProduct(supplierId: ID!, productId: ID!, quantity: Float!): SupplierOnProductType!
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

input ProductSupplierInput {
  supplierId: ID!
  quantity: Int!
}

input CreateOrderSaleInput {
  productId: ID
  serviceId: ID
}

input CreateCompanyInput {
  fax: String
  vatRegime: VatRegimeEnumType!
  nif: String!
  name: String!
  address: String!
  caeId: ID!
  saftExportDate: DateTime
}

input ReceiptPaymentInput {
  type: ReceiptPaymentEnumType!
  amount: Int!
}

enum ReceiptPaymentEnumType {
  CASH
  DEPOSIT
  BANK_TRANSFER
  CREDIT_CARD
  MULTICAIXA_EXPRESS
}

input CreditNotePaymentInput {
  type: CreditNotePaymentEnumType!
  amount: Int!
}

enum CreditNotePaymentEnumType {
  CASH
  DEPOSIT
  BANK_TRANSFER
  CREDIT_CARD
  MULTICAIXA_EXPRESS
}

input DebitNotePaymentInput {
  type: DebitNotePaymentEnumType!
  amount: Int!
}

enum DebitNotePaymentEnumType {
  CASH
  DEPOSIT
  BANK_TRANSFER
  DEBIT_CARD
  MULTICAIXA_EXPRESS
}