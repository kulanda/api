# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type UserType {
  id: ID!
  fullName: String!
  username: String!
  phone: String!
  email: String!
  access: AccessEnumType!
  storeId: ID
  createdAt: DateTime!
  updatedAt: DateTime!
}

enum AccessEnumType {
  SELLER
  OWNER
  MANAGER
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type AuthTokenType {
  access_token: String!
}

type StoreType {
  id: ID!
  address: String!
  designation: String!
  phone: String!
  globalSale: String
  createdAt: DateTime!
  updatedAt: DateTime!
  products: [ProductType!]!
  sellers: [UserType!]!
  sales: [SaleType!]!
}

type OrderType {
  id: ID!
  saleId: ID!
  productId: ID!
  serviceId: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  products: [ProductType!]!
  services: [ServiceType!]!
}

type SaleType {
  id: ID!
  change: Float
  code: Float!
  cash: Float
  bankCard: Float
  totalPrice: Float
  sellerId: ID!
  clientId: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  orders: [OrderType!]!
  seller: UserType
  client: ClientType
}

type ReportStoreType {
  totalSales: Float
  sales: [SaleType!]
  totalSalesBalance: Float
}

type CompanyType {
  tenantId: ID!
  id: ID!
  nif: String!
  name: String!
  address: String!
  logo: String!
  caeId: ID!
  stores: [StoreType!]!
  createdAt: DateTime!
  updatedAt: DateTime!
  cae: CAEType!
}

type CAEType {
  id: ID!
  name: String!
  code: Int!
  sectorId: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  sector: SectorType!
}

type ProductType {
  id: ID!
  name: String!
  description: String
  image: String
  price: Float!
  stock: Int
  expiresOn: DateTime!
  categoryId: ID!
  storeId: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  category: CategoryType!
  charges: [ChargeType!]!
}

type CategoryType {
  id: ID!
  name: String!
  description: String
  type: CategoryEnumType!
  createdAt: DateTime!
  updatedAt: DateTime!
  charges: [ChargeType!]!
}

enum CategoryEnumType {
  PRODUCT
  SERVICE
}

type ChargeType {
  id: ID!
  name: String!
  acronym: String!
  percentage: Float!
  type: ChargeEnumType!
  storeId: ID
  categoryId: ID
  serviceId: ID
  productId: ID
  createdAt: DateTime!
  updatedAt: DateTime!
}

enum ChargeEnumType {
  TAX
  FEE
  DISCOUNT
}

type ServiceType {
  id: ID!
  name: String!
  description: String
  image: String
  price: Float!
  categoryId: ID!
  storeId: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  category: CategoryType!
  charges: [ChargeType!]!
}

type ClientType {
  id: ID!
  fullName: String!
  nif: String
  phone: String!
  email: String
  address: String!
  type: ClientEnumType
  caeId: ID
  storeId: ID
  createdAt: DateTime!
  updatedAt: DateTime!
}

enum ClientEnumType {
  INDIVIDUAL
  LEGAL
}

type SectorType {
  id: ID!
  name: String!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type TenantCredentialsType {
  access_key: String!
}

type Query {
  user: UserType!
  getUser(id: ID!): UserType!
  getUsers(storeId: ID): [UserType!]!
  getCompany: CompanyType
  getStores: [StoreType!]!
  getStore(id: ID!): StoreType
  getStoreReport(id: ID!, options: ReportStoreOptionsInput): ReportStoreType
  getCategories: [CategoryType!]!
  getCategory(id: ID!): CategoryType
  getCategoriesByStore(storeId: ID!): [CategoryType!]
  getProducts(storeId: ID!, filter: FilterProductInput): [ProductType!]!
  getProduct(id: ID!): ProductType
  getServices(storeId: ID!, filter: FilterServiceInput): [ServiceType!]!
  getService(id: ID!): ServiceType
  getSales(storeId: ID!): [SaleType!]!
  getSale(id: ID!): SaleType
  getOrders(saleId: ID!): [OrderType!]!
  getOrder(id: ID!): OrderType
  getSectors: [SectorType!]!
  getSector(id: ID!): SectorType
  getCAEs: [CAEType!]!
  getCAE(id: ID!): CAEType
  getCharges: [ChargeType!]!
  getCharge(id: ID!): ChargeType
  getChargesByStore(storeId: ID!): [ChargeType!]
  getClients(filter: FilterClientInput): [ClientType!]!
  getClient(id: ID!): ClientType
  getClientsByStore(storeId: ID!): [ClientType!]
}

input ReportStoreOptionsInput {
  period: PeriodReportStoreOptionsEnumType
  from: DateTime = "2024-07-30T03:18:49.786Z"
  sellerId: ID
}

enum PeriodReportStoreOptionsEnumType {
  DAY
  WEEK
  MONTH
  YEAR
}

input FilterProductInput {
  name: String
  categoryId: ID
  paginate: FilterProductPaginateInput
}

input FilterProductPaginateInput {
  page: Float = 1
  limit: Float = 30
}

input FilterServiceInput {
  name: String
  categoryId: ID
  paginate: FilterServicePaginateInput
}

input FilterServicePaginateInput {
  page: Float = 1
  limit: Float = 30
}

input FilterClientInput {
  storeId: String
  fullName: String
  email: String
  phone: String
  paginate: FilterClientPaginateInput
}

input FilterClientPaginateInput {
  page: Float = 1
  limit: Float = 30
}

type Mutation {
  signUp(fullName: String!, username: String, email: String!, phone: String, access: AccessEnumType = SELLER, storeId: ID!, password: String!): AuthTokenType!
  signIn(email: String!, password: String!): AuthTokenType!
  createStore(address: String!, designation: String!, phone: String!, globalSale: String): StoreType!
  createCategory(name: String!, description: String, type: CategoryEnumType!, charges: [ID!] = []): CategoryType!
  editCategory(id: String!, name: String, description: String, type: CategoryEnumType, charges: [ID!]): CategoryType!
  createProduct(name: String!, description: String, image: String, price: Float!, stock: Int, expiresOn: DateTime!, categoryId: ID!, charges: [ID!] = [], storeId: ID!): ProductType!
  editProduct(id: ID!, name: String, description: String, image: String, price: Float, stock: Int, expiresOn: DateTime, categoryId: ID, charges: [ID!] = [], storeId: ID): ProductType!
  createService(name: String!, description: String, image: String, price: Float!, categoryId: ID!, charges: [ID!] = [], storeId: ID!): ServiceType!
  editService(id: ID!, name: String, description: String, image: String, price: Float, categoryId: ID, charges: [ID!] = [], storeId: ID): ServiceType!
  createSale(change: Float, cash: Float, bankCard: Float, totalPrice: Float, orders: [CreateOrderSaleInput!]!, clientId: ID): SaleType!
  createOrder(saleId: ID!, productId: ID, serviceId: ID): OrderType!
  createSector(name: String!): SectorType!
  createCAE(name: String!, code: Int!, sectorId: ID!): CAEType!
  createTenant(fullName: String!, username: String!, phone: String!, email: String, company: CreateCompanyInput!, partnerId: ID, expiresAt: DateTime): TenantCredentialsType!
  createCharge(name: String!, acronym: String!, percentage: Float!, type: ChargeEnumType!, storeId: ID!, categoryId: ID, serviceId: ID, productId: ID): ChargeType!
  createClient(fullName: String!, nif: String, phone: String!, email: String, address: String!, type: ClientEnumType = INDIVIDUAL, caeId: ID, storeId: ID): ClientType!
}

input CreateOrderSaleInput {
  productId: ID
  serviceId: ID
}

input CreateCompanyInput {
  nif: String!
  name: String!
  address: String!
  logo: String
  caeId: ID!
}